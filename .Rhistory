install.packages("stringr")
library("stringr")
library("stringr")
library("stringr")
a
install.packages("stringr")
install.packages("stringr")
my.age <- 20
my.name <- "Yicheng"
minutes.in.a.day <- 60*24
hours.in.a.years <- 24*365
more.minutes.than.hours <- minutes.in.a.day > hours.in.a.years
return(i.string)
MakeIntroduction <- function(s.name,s.age){
i.string <- "Hello, my name is" (s.name)", and I'm "(s.age) "years old"
return(i.string)
}
return(i.string)
MakeIntroduction <- function(s.name,s.age){
i.string <- "Hello, my name is" s.name", and I'm "s.age "years old"
return(i.string)
}
i.string <- "Hello, my name is", s.name,", and I'm ",s.age, "years old"
return(i.string)
MakeIntroduction <- function(s.name,s.age){
i.string <- "Hello, my name is", s.name,", and I'm ",s.age, "years old"
return(i.string)
}
MakeIntroduction <- function(s.name,s.age){
i.string <- "Hello, my name is", s.name,", and I'm ",s.age, "years old"
return(i.string)
}
MakeIntroduction <- function(s.name,s.age){
i.string <- paste("Hello, my name is", s.name,", and I'm ",s.age, "years old")
return(i.string)
}
MakeIntroduction <- function(s.name,s.age){
i.string <- paste("Hello, my name is", s.name,", and I'm ",s.age, "years old")
return(i.string)
}
my.intron <- MakeIntroduction(my.name,my.age)
my.intro <- MakeIntroduction(my.name,my.age)
MakeIntroduction <- function(s.name,s.age){
i.string <- paste("Hello, my name is", s.name,", and I'm ",s.age, "years old")
return(i.string)
}
my.intro <- MakeIntroduction(my.name,my.age)
casual.intro <- gsub("Hello, my name is ","Hey, I'm",my.intro)
casual.intro <- gsub("Hello, my name is ","Hey, I'm ",my.intro)
loud.intro <- toupper(my.intro)
quiet.intro <- tolower(my.intro)
capitalized.intro <- srt_to_tilte(my.intro)
capitalized.intro <- str_to_tilte(my.intro)
capitalized.intro <- str_to_title(my.intro)
capitalized.intro <- str_to_title(my.intro)
capitalized.intro <- str_to_title(my.intro)
capitalized.intro <- str_to_title(my.intro)
library("stringr")
install.packages("stringr")
install.packages("stringr")
library("stringr")
capitalized.intro <- str_to_title(my.intro)
occurrences <- str_count(my.intro,"e")
Double <- function(a.number){
dou.num <- a.number*2
return(dou.num)
}
minutes.in.two.days <- Double(minutes.in.a.day)
ThirdPower <- function(b.number){
thi.number <- b.number^3
return(thi.number)
}
twenty.seven <- ThirdPower(3)
movies <- c("Blade Runner 2049","Kingsman: The Golden Circle","It","Happy Death Day","American Made","The LEGO Ninjago Movie")
top.three <- movies[1:3]
excited <- paste0(movies," is a great movie!")
without.four <- c(top.three,movies[5:6])
numbers <- 700:999
len <- length(numbers)
numbers.mean <- mean(numbers)
numbers.median <- median(numbers)
numbers.median <- median(numbers)
lower.numbers <- numbers[500:699]
lower.numbers <- 500:699
all.numbers <- c(numbers, lower.numbers)
all.numbers <- c(lower.numbers,numbers)
today <- as.Date()
today <- as.Date(x)
today <- as.Date(Sys.Date())
winter.break <- as.Date(15dec2017)
winter.break <- as.Date("15dec2017")
winter.break <- as.Date("15dec2017","%d%b%Y")
days.to.break <- winter.break - today
days.to.break <- '-'(winter.break,today)
days.to.break <- '-'(as.date(winter.break),as.date(today))
days.to.break <- winter.break-today
days.to.break <- as.Date(today)-as,date(winter.break)
days.to.break <- as.Date(today)-as.date(winter.break)
days.to.break <- as.Date(today)-as.date(winter.break)
today <- as.Date(Sys.Date())
winter.break <- as.Date("15dec2017","%d%b%Y")
days.to.break <- as.Date("15dec2017","%d%b%Y")-as.Date(Sys.Date())
days.to.break <- as.Date("15dec2017","%d%b%Y")-as.Date(Sys.Date())
print(days.to.break)
days.to.break <- winter.break-today
print(days.to.break)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- n.bday - as.Date(Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",{N}," days I'll be ",ages+1")
}
# Create a variable `my.bday.intro` using the `MakeBirthdayIntro` function, passing in `my.name`, `my.age`, and your upcoming birthday.
# Challenge ------------------------------------------------------------------
# Write a function `RemoveDigits` that will remove all digits (i.e., 0 through 9) from all elements in a *vector of strings*.
# Demonstrate that your approach is successful by passing a vector of courses to your function
# For example, RemoveDigits(c("INFO 201", "CSE 142"))
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- n.bday - as.Date(Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",{N}," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,02/24/2018)
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,02/24/2018)
winter.break <- as.Date("15dec2017","%d%b%Y")
days.to.break <- winter.break-today
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- n.bday - as.Date(Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,02/24/2018)
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,02/24/2018)
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,24feb2018)
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,24feb2018)
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,2018-02-24)
ndays <- as.date(n.bday) - as.Date(Sys.Date())
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- as.date(n.bday) - as.Date(Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,2018-02-24)
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,'2018-02-24')
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- as.date(n.bday) - as.Date(Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,'2018-02-24')
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- as.date(n.bday) - as.Date(Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- as.Date(n.bday) - as.Date(Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,2018-2-24)
ndays <- as.Date(n.bday,origin=Sys.Date())
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- as.Date(n.bday,origin=Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,2018-2-24)
days.to.break <- as.Date(winter.break,today)
days.to.break <- as.Date(winter.break,origin=today)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
ndays <- as.Date(n.bday,origin=Sys.Date())
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
days.to.break <- as.numeric(winter.break-today)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
today <- as.Date(Sys.Date())
bday<- as.Date(n.bday)
ndays <- as.numeric(bday-today)
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
today <- as.Date(Sys.Date())
bday<- as.Date(n.bday,origin="1970-01-01")
ndays <- as.numeric(bday-today)
b.srting <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro(Yicheng,20,2018-2-24)
my.bday.intro <- MakeBirthdayIntro("Yicheng",20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
today <- as.Date(Sys.Date())
bday<- as.Date(n.bday,origin="1970-01-01")
ndays <- as.numeric(bday-today)
b.string <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro("Yicheng",20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
today <- as.Date(Sys.Date())
#bday<- as.Date(n.bday,origin="1970-01-01")
ndays <- as.numeric(n.bday-today)
b.string <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro("Yicheng",20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
today <- as.Date(Sys.Date())
bday<- as.Date(n.bday)
ndays <- as.numeric(n.bday-today)
b.string <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro("Yicheng",20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
today <- as.Date(Sys.Date())
bday<- as.numeric(n.bday)
ndays <- as.numeric(n.bday-today)
b.string <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro("Yicheng",20,2018-2-24)
my.bday.intro <- MakeBirthdayIntro("Yicheng",20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
today <- as.Date(Sys.Date())
bday <- as.Date(n.bday)
ndays <- as.numeric(bday-today)
b.string <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro("Yicheng",20,2018-2-24)
MakeBirthdayIntro <- function(a.name,ages,n.bday){
today <- as.Date(Sys.Date())
bday <- as.Date(n.bday)
ndays <- as.numeric(bday-today)
b.string <- paste("Hello, my name is ",a.name," and I'm ",ages," years old. In ",ndays," days I'll be ",ages+1)
return(b.string)
}
my.bday.intro <- MakeBirthdayIntro("Yicheng",20,"2018-2-24")
RemoveDigits<- function(a.vector){
r.vector <- gsub(0," ",a.vector)
r.vector <- gsub(1," ",a.vector)
r.vector <- gsub(2," ",a.vector)
r.vector <- gsub(3," ",a.vector)
r.vector <- gsub(4," ",a.vector)
r.vector <- gsub(5," ",a.vector)
r.vector <- gsub(6," ",a.vector)
r.vector <- gsub(7," ",a.vector)
r.vector <- gsub(8," ",a.vector)
r.vector <- gsub(9," ",a.vector)
return(r.vector)
}
print(RemoveDigits(c("INFO 201", "CSE 142")))
RemoveDigits<- function(a.vector){
r.vector <- gsub(0," ",a.vector)
r.vector <- gsub(1," ",r.vector)
r.vector <- gsub(2," ",r.vector)
r.vector <- gsub(3," ",r.vector)
r.vector <- gsub(4," ",r.vector)
r.vector <- gsub(5," ",r.vector)
r.vector <- gsub(6," ",r.vector)
r.vector <- gsub(7," ",r.vector)
r.vector <- gsub(8," ",r.vector)
r.vector <- gsub(9," ",r.vector)
return(r.vector)
}
print(RemoveDigits(c("INFO 201", "CSE 142")))
RemoveDigits<- function(a.vector){
r.vector <- gsub(0,"",a.vector)
r.vector <- gsub(1,"",r.vector)
r.vector <- gsub(2,"",r.vector)
r.vector <- gsub(3,"",r.vector)
r.vector <- gsub(4,"",r.vector)
r.vector <- gsub(5,"",r.vector)
r.vector <- gsub(6,"",r.vector)
r.vector <- gsub(7,"",r.vector)
r.vector <- gsub(8,"",r.vector)
r.vector <- gsub(9,"",r.vector)
return(r.vector)
}
print(RemoveDigits(c("INFO 201", "CSE 142")))
shiny::runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
library("shiny")
library("plotly")
runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
runApp('C:/Users/Duanc/Desktop/AC4-Final-Project-map')
setwd("C:/Users/Duanc/Desktop/AC4-Final-Project-map")
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE)
View(ufo.data)
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% mutate(Country = "us")
View(ufo.data)
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% mutate(Country = "us")
View(ufo.data)
View(ufo.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("maps")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(ufo.data)
runApp()
runApp()
runApp()
runApp()
library(lubridate)
install.packages("lubridate")
library("lubridate")
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country = "us")
View(ufo.data)
runApp()
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")
View(ufo.data)
runApp()
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Years = year(Date))
View(ufo.data)
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Years = year(ufo.data$Date))
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Years = year(as.date(Date)))
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Years = year(as.Date(Date)))
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Years = year(as.Date(Date)))
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Years = year(as.Date(Date)))
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Years = mdy(Date))
runApp()
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Date = mdy(Date))
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date))
runApp()
runApp()
shinyServer(function(input, output) {
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date))
ufo.dataset <- reactive({
selected.df <- ufo.data %>% filter(Shape == input$shape) %>% filter(Years == input$years)
return(selected.df)
})
output$map <- renderPlotly({
df <- ufo.dataset()
p <- plot_geo(df, locationmode = 'USA-states', sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitute
)
})
# Stuff goes here
})
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date))
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date))
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% filter(Country == "us")%>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date))
View(ufo.data)
runApp()
runApp()
runApp()
runApp()
runApp()
View(ufo.data)
runApp()
runApp()
install.packages(poltly)
install.packages("plotly")
install.packages("plotly")
library('plotly')
shiny::runApp()
install.packages("plotly")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ufo.data <- read.csv(file="data/ufo.csv", header=TRUE) %>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date))
View(ufo.data)
ufo.data <- read.csv(file="data/ufo.csv", header= FALSE) %>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date))
ufo.data <- read.csv(file="data/ufo.csv", header= TRUE) %>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date)) %>% select(City, State,Shape,Duration,Description,Longitude,Latitude,Years)
ufo.data <- read.csv(file="data/ufo.csv", header= TRUE) %>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date)) %>% select(City, State,Shape,Duration,Description,Longitude,Latitute,Years)
View(ufo.data)
runApp()
ufo.data <- read.csv(file="data/ufo.csv", header= TRUE) %>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date)) %>% select(City, State,Shape,Duration,Description,Longitude,Latitute,Years)
runApp()
ufo.data <- read.csv(file="data/ufo.csv", header= TRUE) %>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date)) %>% select(City, State,Shape,Duration,Description,Longitude,Latitute,Years)
ufo.data <- read.csv(file="data/ufo.csv", header= TRUE) %>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date)) %>% select(City, State,Shape,Duration,Description,Longitude,Latitute,Years)
ufo.data <- read.csv(file="data/ufo.csv", header= TRUE) %>% mutate(Date = mdy(Date)) %>% mutate(Years = year(Date)) #%>% select(City, State,Shape,Duration,Description,Longitude,Latitute,Years)
View(ufo.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
